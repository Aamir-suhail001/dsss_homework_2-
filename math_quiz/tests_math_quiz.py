import unittest
from math_quiz import randon_integer, random_operator, calculation


class TestMathGame(unittest.TestCase):

    def test_randon_integer(self):
        # Test if random numbers generated are within the specified range
        min_val = 1
        max_val = 10
        for _ in range(1000):  # Test a large number of random values
            rand_num = randon_integer(min_val, max_val)
            self.assertTrue(min_val <= rand_num <= max_val)

    def test_random_operator(self):
        # TODO
        operators = ['+','-','*']
        for _ in range(len(operators)):
            take_sign = random_operator()
            self.assertIn(take_sign, operators, 'The sign generated by the function is not the valid sign')
        pass

    def test_calculation(self):
            test_cases = [
                (5, 2, '+', '5 + 2', 7),
                (10, 5, '*', '10 * 5', 50),
                (7, 2, '+', '7 + 2 ', 9),
                (20, 10, '-', '20 - 10', 10),
            ]

            for num1, num2, operator, expected_problem, expected_answer in test_cases:
                # TODO
                PROBLEM, ANSWER = calculation(num1, num2, operator)
                self.assertEqual(PROBLEM, expected_problem, 'The problem do not match expected problem')
                self.assertEqual(ANSWER, expected_answer, 'The anser do not match the expected answer')
                pass

if __name__ == "__main__":
    unittest.main()
